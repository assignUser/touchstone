% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{benchmark_run_ref}
\alias{benchmark_run_ref}
\title{Run a benchmark for git refs}
\usage{
benchmark_run_ref(
  expr_before_benchmark,
  ...,
  refs = c(ref_get_or_fail("GITHUB_BASE_REF"), ref_get_or_fail("GITHUB_HEAD_REF")),
  n = 100,
  path_pkg = "."
)
}
\arguments{
\item{expr_before_benchmark}{Character vector with code to run before
the benchmark is ran, will be evaluated with \code{\link[=exprs_eval]{exprs_eval()}}.}

\item{...}{Named epression or named character vector of length one with code to benchmark, will
be evaluated with \code{\link[=exprs_eval]{exprs_eval()}}.}

\item{refs}{Character vector with branch names to benchmark. The package
must be built for each benchmarked branch beforehand with \code{\link[=refs_install]{refs_install()}}.
The base ref is the target branch of the pull request in a workflow run,
the head ref is the source branch of the pull request in a workflow run.}

\item{n}{Number of times benchmarks should be run for each \code{ref}.}

\item{path_pkg}{The path to the package to benchmark. Will be used to
temporarily checkout the branch during benchmarking.}
}
\value{
All timings in a tibble.
}
\description{
Run a benchmark for git refs
}
\details{
Runs the following loop \code{n} times:
\itemize{
\item removes all touchstone libraries from the library path, adding the one
corresponding to \code{ref}.
\item runs setup code \code{exp_before_ref}.
\item benchmarks \code{expr_to_benchmark} and writes them to disk.
}
}
\section{Caution}{

This function will perform various git operations that affect the state of
the directory it is ran in, in particular different branches will be checked
out. Ensure a clean git working directory before invocation.
}

